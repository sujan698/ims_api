// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id   Int    @id() @default(autoincrement())
  name String @unique()
  user User[]

  @@map("roles")
}

model Organization {
  id                Int                @id() @default(autoincrement())
  name              String             @unique
  type              OrganizationType   @default(retail)
  address           String?
  phone             String?            @db.VarChar(15)
  createdAt         DateTime           @default(now()) @map("created_at")
  updatedAt         DateTime           @default(now()) @map("updated_at")
  user              User[]
  itemOrganizations ItemOrganization[]

  @@map("organizations")
}

enum OrganizationType {
  retail
  wholesale
}

model User {
  id             Int      @id @default(autoincrement())
  roleId         Int      @map("role_id")
  organizationId Int      @map("organization_id")
  name           String
  email          String   @unique
  mobile         String   @unique @db.VarChar(15)
  password       String
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @default(now()) @map("updated_at")

  role         Role         @relation(fields: [roleId], references: [id])
  organization Organization @relation(fields: [organizationId], references: [id])

  @@map("user")
}

model Item {
  id           Int          @id @default(autoincrement())
  name         String       @unique
  description  String?
  quantity     Int          @default(0)
  price        Float        @default(0)
  discount     Float        @default(0)
  discountType DiscountType @default(rate)
  tax          Float        @default(0)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @default(now())

  itemOrganizations ItemOrganization[]

  @@map("items")
}

model ItemOrganization {
  itemId         Int
  organizationId Int

  item         Item         @relation(fields: [itemId], references: [id])
  organization Organization @relation(fields: [organizationId], references: [id])

  @@id([itemId, organizationId]) // Composite primary key
  @@map("item_organization")
}

enum DiscountType {
  rate
  amount
}

model CustomerVendor {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  email       String?
  phone       String?  @db.VarChar(15)
  street      String?
  city        String?
  district    String?
  province    String?
  isVendor    Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("customer_vendors")
}
